"use strict";

const React = require("react");

const {
  Text,
  Box,
  render
} = require("ink");

const importJsx = require("import-jsx");

const Menu = importJsx("./components/Menu.js");
const Info = importJsx("./components/Info.js");
const Punten = importJsx("./components/Punten.js");
const Showcase = importJsx("./components/Showcase.js");

const BigText = require("ink-big-text");

const {
  useState
} = require("react");

const App = ({
  name = "Stranger"
}) => {
  const [route, setRoute] = useState("home");

  const showView = route => {
    switch (route) {
      case "briefing":
        return /*#__PURE__*/React.createElement(Info, {
          topic: "briefing"
        });

      case "tips":
        return /*#__PURE__*/React.createElement(Info, {
          topic: "tips"
        });

      case "publish":
        return /*#__PURE__*/React.createElement(Info, {
          topic: "publish"
        });

      case "showcase":
        return /*#__PURE__*/React.createElement(Showcase, null);

      case "punten":
        return /*#__PURE__*/React.createElement(Punten, null);

      default:
        return /*#__PURE__*/React.createElement(Menu, {
          onRouteChange: route => setRoute(route)
        });
    }
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    margin: "1"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "DEV4 - Terminal",
    font: "chrome"
  })), showView(route));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlRleHQiLCJCb3giLCJyZW5kZXIiLCJpbXBvcnRKc3giLCJNZW51IiwiSW5mbyIsIlB1bnRlbiIsIlNob3djYXNlIiwiQmlnVGV4dCIsInVzZVN0YXRlIiwiQXBwIiwibmFtZSIsInJvdXRlIiwic2V0Um91dGUiLCJzaG93VmlldyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFGO0FBQVFDLEVBQUFBLEdBQVI7QUFBYUMsRUFBQUE7QUFBYixJQUF3QkgsT0FBTyxDQUFDLEtBQUQsQ0FBckM7O0FBQ0EsTUFBTUksU0FBUyxHQUFHSixPQUFPLENBQUMsWUFBRCxDQUF6Qjs7QUFFQSxNQUFNSyxJQUFJLEdBQUdELFNBQVMsQ0FBQyxzQkFBRCxDQUF0QjtBQUNBLE1BQU1FLElBQUksR0FBR0YsU0FBUyxDQUFDLHNCQUFELENBQXRCO0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxTQUFTLENBQUMsd0JBQUQsQ0FBeEI7QUFFQSxNQUFNSSxRQUFRLEdBQUdKLFNBQVMsQ0FBQywwQkFBRCxDQUExQjs7QUFFQSxNQUFNSyxPQUFPLEdBQUdULE9BQU8sQ0FBQyxjQUFELENBQXZCOztBQUNBLE1BQU07QUFBRVUsRUFBQUE7QUFBRixJQUFlVixPQUFPLENBQUMsT0FBRCxDQUE1Qjs7QUFFQSxNQUFNVyxHQUFHLEdBQUcsQ0FBQztBQUFFQyxFQUFBQSxJQUFJLEdBQUc7QUFBVCxDQUFELEtBQTJCO0FBQ3RDLFFBQU0sQ0FBQ0MsS0FBRCxFQUFRQyxRQUFSLElBQW9CSixRQUFRLENBQUMsTUFBRCxDQUFsQzs7QUFFQSxRQUFNSyxRQUFRLEdBQUlGLEtBQUQsSUFBVztBQUMzQixZQUFRQSxLQUFSO0FBQ0MsV0FBSyxVQUFMO0FBQ0MsNEJBQU8sb0JBQUMsSUFBRDtBQUFNLFVBQUEsS0FBSyxFQUFDO0FBQVosVUFBUDs7QUFDRCxXQUFLLE1BQUw7QUFDQyw0QkFBTyxvQkFBQyxJQUFEO0FBQU0sVUFBQSxLQUFLLEVBQUM7QUFBWixVQUFQOztBQUNELFdBQUssU0FBTDtBQUNDLDRCQUFPLG9CQUFDLElBQUQ7QUFBTSxVQUFBLEtBQUssRUFBQztBQUFaLFVBQVA7O0FBQ0QsV0FBSyxVQUFMO0FBQ0MsNEJBQU8sb0JBQUMsUUFBRCxPQUFQOztBQUNELFdBQUssUUFBTDtBQUNDLDRCQUFPLG9CQUFDLE1BQUQsT0FBUDs7QUFDRDtBQUNDLDRCQUFPLG9CQUFDLElBQUQ7QUFBTSxVQUFBLGFBQWEsRUFBR0EsS0FBRCxJQUFXQyxRQUFRLENBQUNELEtBQUQ7QUFBeEMsVUFBUDtBQVpGO0FBY0EsR0FmRDs7QUFpQkEsc0JBQ0MsdURBQ0Msb0JBQUMsR0FBRDtBQUFLLElBQUEsTUFBTSxFQUFDO0FBQVosa0JBQ0Msb0JBQUMsT0FBRDtBQUFTLElBQUEsSUFBSSxFQUFDLGlCQUFkO0FBQWdDLElBQUEsSUFBSSxFQUFDO0FBQXJDLElBREQsQ0FERCxFQUlFRSxRQUFRLENBQUNGLEtBQUQsQ0FKVixDQUREO0FBUUEsQ0E1QkQ7O0FBOEJBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJOLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgVGV4dCwgQm94LCByZW5kZXIgfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCBpbXBvcnRKc3ggPSByZXF1aXJlKFwiaW1wb3J0LWpzeFwiKTtcblxuY29uc3QgTWVudSA9IGltcG9ydEpzeChcIi4vY29tcG9uZW50cy9NZW51LmpzXCIpO1xuY29uc3QgSW5mbyA9IGltcG9ydEpzeChcIi4vY29tcG9uZW50cy9JbmZvLmpzXCIpO1xuY29uc3QgUHVudGVuID0gaW1wb3J0SnN4KFwiLi9jb21wb25lbnRzL1B1bnRlbi5qc1wiKTtcblxuY29uc3QgU2hvd2Nhc2UgPSBpbXBvcnRKc3goXCIuL2NvbXBvbmVudHMvU2hvd2Nhc2UuanNcIik7XG5cbmNvbnN0IEJpZ1RleHQgPSByZXF1aXJlKFwiaW5rLWJpZy10ZXh0XCIpO1xuY29uc3QgeyB1c2VTdGF0ZSB9ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuXG5jb25zdCBBcHAgPSAoeyBuYW1lID0gXCJTdHJhbmdlclwiIH0pID0+IHtcblx0Y29uc3QgW3JvdXRlLCBzZXRSb3V0ZV0gPSB1c2VTdGF0ZShcImhvbWVcIik7XG5cblx0Y29uc3Qgc2hvd1ZpZXcgPSAocm91dGUpID0+IHtcblx0XHRzd2l0Y2ggKHJvdXRlKSB7XG5cdFx0XHRjYXNlIFwiYnJpZWZpbmdcIjpcblx0XHRcdFx0cmV0dXJuIDxJbmZvIHRvcGljPVwiYnJpZWZpbmdcIiAvPjtcblx0XHRcdGNhc2UgXCJ0aXBzXCI6XG5cdFx0XHRcdHJldHVybiA8SW5mbyB0b3BpYz1cInRpcHNcIiAvPjtcblx0XHRcdGNhc2UgXCJwdWJsaXNoXCI6XG5cdFx0XHRcdHJldHVybiA8SW5mbyB0b3BpYz1cInB1Ymxpc2hcIiAvPjtcblx0XHRcdGNhc2UgXCJzaG93Y2FzZVwiOlxuXHRcdFx0XHRyZXR1cm4gPFNob3djYXNlIC8+O1xuXHRcdFx0Y2FzZSBcInB1bnRlblwiOlxuXHRcdFx0XHRyZXR1cm4gPFB1bnRlbiAvPjtcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHJldHVybiA8TWVudSBvblJvdXRlQ2hhbmdlPXsocm91dGUpID0+IHNldFJvdXRlKHJvdXRlKX0gLz47XG5cdFx0fVxuXHR9O1xuXG5cdHJldHVybiAoXG5cdFx0PD5cblx0XHRcdDxCb3ggbWFyZ2luPVwiMVwiPlxuXHRcdFx0XHQ8QmlnVGV4dCB0ZXh0PVwiREVWNCAtIFRlcm1pbmFsXCIgZm9udD1cImNocm9tZVwiIC8+XG5cdFx0XHQ8L0JveD5cblx0XHRcdHtzaG93Vmlldyhyb3V0ZSl9XG5cdFx0PC8+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdfQ==